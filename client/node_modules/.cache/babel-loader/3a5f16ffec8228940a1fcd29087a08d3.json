{"ast":null,"code":"import _slicedToArray from\"/home/teo/Documentos/Projectos/card-game/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import logo from\"./logo.svg\";import{Switch,Route,Redirect}from\"react-router-dom\";import\"./App.css\";import Board from\"./components/Board\";import Signup from\"./components/auth/Signup\";import Login from\"./components/auth/Login\";import\"bootstrap/dist/css/bootstrap.min.css\";import{AuthService}from\"./utils/services/Auth.service\";import ButtonAppBar from\"./components/ui/NavBar\";var authService=new AuthService();function App(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loggedInUser=_useState2[0],setLoggedInUser=_useState2[1];var fetchUser=function fetchUser(){return authService.getLoggedUser();};useEffect(function(){loggedInUser==false&&fetchUser().then(function(user){user?setLoggedInUser(user):setLoggedInUser(null);});},[loggedInUser]);return React.createElement(Switch,null,React.createElement(React.Fragment,null,React.createElement(ButtonAppBar,Object.assign({loggedInUser:loggedInUser},props)),React.createElement(Route,{path:\"/signup\",render:function render(){return React.createElement(Signup,Object.assign({},props,{setUser:fetchUser}));}}),React.createElement(Route,{path:\"/login\",render:function render(){return React.createElement(Login,Object.assign({},props,{setUser:fetchUser}));}}),loggedInUser==false?React.createElement(\"h3\",null,\"Trying to login\"):loggedInUser==null?React.createElement(Redirect,{to:\"/login\"}):React.createElement(Route,{exact:true,path:\"/\",component:Board})));}export default App;","map":{"version":3,"sources":["/home/teo/Documentos/Projectos/card-game/client/src/App.js"],"names":["React","useState","useEffect","Switch","Route","Redirect","Board","Signup","Login","AuthService","ButtonAppBar","authService","App","props","loggedInUser","setLoggedInUser","fetchUser","getLoggedUser","then","user"],"mappings":"sKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,6BAEA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,QAAxB,KAAwC,kBAAxC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAO,sCAAP,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,GAAMC,CAAAA,WAAW,CAAG,GAAIF,CAAAA,WAAJ,EAApB,CAEA,QAASG,CAAAA,GAAT,CAAaC,KAAb,CAAoB,eACsBZ,QAAQ,CAAC,KAAD,CAD9B,wCACXa,YADW,eACGC,eADH,eAElB,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAML,CAAAA,WAAW,CAACM,aAAZ,EAAN,EAAlB,CAEAf,SAAS,CAAC,UAAM,CACdY,YAAY,EAAI,KAAhB,EACEE,SAAS,GAAGE,IAAZ,CAAiB,SAAAC,IAAI,CAAI,CACvBA,IAAI,CAAGJ,eAAe,CAACI,IAAD,CAAlB,CAA2BJ,eAAe,CAAC,IAAD,CAA9C,CACD,CAFD,CADF,CAID,CALQ,CAKN,CAACD,YAAD,CALM,CAAT,CAOA,MACE,qBAAC,MAAD,MACE,wCACE,oBAAC,YAAD,gBAAc,YAAY,CAAEA,YAA5B,EAA8CD,KAA9C,EADF,CAEE,oBAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,MAAM,CAAE,wBAAM,qBAAC,MAAD,kBAAYA,KAAZ,EAAmB,OAAO,CAAEG,SAA5B,GAAN,EAA9B,EAFF,CAGE,oBAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,MAAM,CAAE,wBAAM,qBAAC,KAAD,kBAAWH,KAAX,EAAkB,OAAO,CAAEG,SAA3B,GAAN,EAA7B,EAHF,CAIGF,YAAY,EAAI,KAAhB,CACC,gDADD,CAEGA,YAAY,EAAI,IAAhB,CACF,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EADE,CAGF,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAER,KAAjC,EATJ,CADF,CADF,CAgBD,CAED,cAAeM,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthService } from \"./utils/services/Auth.service\";\nimport ButtonAppBar from \"./components/ui/NavBar\";\nconst authService = new AuthService();\n\nfunction App(props) {\n  const [loggedInUser, setLoggedInUser] = useState(false);\n  const fetchUser = () => authService.getLoggedUser();\n\n  useEffect(() => {\n    loggedInUser == false &&\n      fetchUser().then(user => {\n        user ? setLoggedInUser(user) : setLoggedInUser(null);\n      });\n  }, [loggedInUser]);\n\n  return (\n    <Switch>\n      <>\n        <ButtonAppBar loggedInUser={loggedInUser} {...props} />\n        <Route path=\"/signup\" render={() => <Signup {...props} setUser={fetchUser} />} />\n        <Route path=\"/login\" render={() => <Login {...props} setUser={fetchUser} />} />\n        {loggedInUser == false ? (\n          <h3>Trying to login</h3>\n        ) : loggedInUser == null ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Route exact path=\"/\" component={Board} />\n        )}\n      </>\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}