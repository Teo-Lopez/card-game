{"ast":null,"code":"var _jsxFileName = \"/home/teo/Documentos/Projectos/card-game/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthService } from \"./utils/services/Auth.service\";\nimport ButtonAppBar from \"./components/ui/NavBar\";\nconst authService = new AuthService();\n\nfunction App(props) {\n  const [loggedInUser, setLoggedInUser] = useState(false);\n\n  const fetchUser = () => authService.getLoggedUser();\n\n  useEffect(() => {\n    loggedInUser == false && fetchUser().then(user => {\n      user ? setLoggedInUser(user) : setLoggedInUser(null);\n    });\n  }, [loggedInUser]);\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(ButtonAppBar, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/signup\",\n    render: () => React.createElement(Signup, Object.assign({}, props, {\n      setUser: fetchUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    render: () => React.createElement(Login, {\n      setUser: fetchUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), loggedInUser == false ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Trying to login\") : loggedInUser == null ? React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Board,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/teo/Documentos/Projectos/card-game/client/src/App.js"],"names":["React","useState","useEffect","Switch","Route","Redirect","Board","Signup","Login","AuthService","ButtonAppBar","authService","App","props","loggedInUser","setLoggedInUser","fetchUser","getLoggedUser","then","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,MAAMC,WAAW,GAAG,IAAIF,WAAJ,EAApB;;AAEA,SAASG,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMe,SAAS,GAAG,MAAML,WAAW,CAACM,aAAZ,EAAxB;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,IAAI,KAAhB,IACEE,SAAS,GAAGE,IAAZ,CAAiBC,IAAI,IAAI;AACvBA,MAAAA,IAAI,GAAGJ,eAAe,CAACI,IAAD,CAAlB,GAA2BJ,eAAe,CAAC,IAAD,CAA9C;AACD,KAFD,CADF;AAID,GALQ,EAKN,CAACD,YAAD,CALM,CAAT;AAOA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CACE,oBAAC,YAAD,oBAAkBD,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,MAAM,EAAE,MAAM,oBAAC,MAAD,oBAAYA,KAAZ;AAAmB,MAAA,OAAO,EAAEG,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGF,YAAY,IAAI,KAAhB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,GAEGA,YAAY,IAAI,IAAhB,GACF,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAGF,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAER,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF,CADF;AAgBD;;AAED,eAAeM,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthService } from \"./utils/services/Auth.service\";\nimport ButtonAppBar from \"./components/ui/NavBar\";\nconst authService = new AuthService();\n\nfunction App(props) {\n  const [loggedInUser, setLoggedInUser] = useState(false);\n  const fetchUser = () => authService.getLoggedUser();\n\n  useEffect(() => {\n    loggedInUser == false &&\n      fetchUser().then(user => {\n        user ? setLoggedInUser(user) : setLoggedInUser(null);\n      });\n  }, [loggedInUser]);\n\n  return (\n    <Switch>\n      <>\n        <ButtonAppBar {...props} />\n        <Route path=\"/signup\" render={() => <Signup {...props} setUser={fetchUser} />} />\n        <Route path=\"/login\" render={() => <Login setUser={fetchUser} />} />\n        {loggedInUser == false ? (\n          <h3>Trying to login</h3>\n        ) : loggedInUser == null ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Route exact path=\"/\" component={Board} />\n        )}\n      </>\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}