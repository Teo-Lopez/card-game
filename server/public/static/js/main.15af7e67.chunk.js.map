{"version":3,"sources":["logo.svg","utils/dragItems.js","components/Card.jsx","components/Slot.jsx","components/BoardSection.jsx","utils/cards/Cards.js","components/Deck.jsx","components/Board.jsx","utils/services/Auth.service.js","components/auth/Signup.jsx","components/auth/Login.jsx","components/ui/NavBar.jsx","App.js","serviceWorker.js","index.js","assets/chars/midoriya.png","assets/chars/leena.png","assets/clash.wav","assets/wood-bg.jpg","assets/cover.png"],"names":["module","exports","ItemTypes","Card","props","char","power","life","name","maxLife","img","useDrag","item","type","idx","collect","monitor","isDragging","drag","CardWrapper","styled","div","CardTitle","CardStats","CardImage","ref","style","opacity","fontSize","fontWeight","cursor","alt","src","Slot","BoardSectionWrapper","BoardSection","useDrop","accept","drop","algo","children","empty","move","attack","mon","isOver","canDrop","cardDropArea","backgroundColor","id","this","_clashSound","Audio","clash","sound","time","play","card","_playSound","Midoriya","midoriya","Leena","leena","deck01","DeckWrapper","DeckImg","cover","Deck","drawCard","onClick","BoardWrapper","background","Board","useState","Array","fill","ownPositions","setOwnPositions","drawedCard","setDrawedCard","useEffect","indexOf","ownPositionsCopy","splice","playCard","removeCard","arr","newPos","newownPositions","map","elm","DndProvider","backend","Backend","Row","width","noGutters","className","Col","md","key","randNum","Math","floor","random","length","AuthService","signUp","user","password","service","post","username","then","res","data","catch","err","console","log","login","getLoggedUser","get","logout","axios","create","baseURL","withCredentials","authService","useStyles","makeStyles","theme","root","margin","spacing","Signup","classes","setUser","setPassword","userError","setUserError","passError","setPassError","submitDisabled","setSubmitDisabled","onChange","e","currentTarget","value","test","noValidate","autoComplete","onSubmit","preventDefault","theUser","history","push","TextField","error","label","defaultValue","helperText","variant","required","disabled","Login","flexGrow","menuButton","marginRight","title","ButtonAppBar","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","loggedInUser","Button","to","App","setLoggedInUser","fetchUser","path","render","exact","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15af7e67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const ItemTypes = {\n  CARD: \"card\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDrag } from \"react-dnd\";\nimport { ItemTypes } from \"../utils/dragItems\";\n\nconst Card = props => {\n  const { power, life, maxLife, name, img } = props.char;\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, idx: props.idx, char: props.char },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  const CardWrapper = styled.div`\n    margin: 0 auto;\n    width: 90%;\n    padding: 0 5%;\n    height: 250px;\n    background-color: rgba(240, 240, 240, 0.5);\n    /* border: 1px solid grey; */\n    box-sizing: content-box;\n    h3 {\n      font-size: 16px;\n    }\n  `;\n\n  const CardTitle = styled.div`\n    text-align: center;\n    height: 5%;\n    margin-bottom: 15px;\n  `;\n\n  const CardStats = styled.div`\n    display: flex;\n    justify-content: space-between;\n    height: 10%;\n  `;\n\n  const CardImage = styled.div`\n    width: 100%;\n    height: 80%;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: contain;\n    }\n  `;\n\n  return (\n    <CardWrapper\n      ref={drag}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        fontSize: isDragging ? 25 : \"initial\",\n        fontWeight: \"bold\",\n        cursor: \"move\"\n      }}\n    >\n      <CardTitle>\n        <h3>\n          <strong>{name}</strong>\n        </h3>\n      </CardTitle>\n      <CardStats>\n        <div>\n          <p>Pow: {power}</p>\n        </div>\n        maxLife\n        <div>\n          <p>HP: {life}</p>\n        </div>\n      </CardStats>\n      <CardImage>\n        <img alt={name} src={img} />\n      </CardImage>\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDrag } from \"react-dnd\";\nimport { ItemTypes } from \"../utils/dragItems\";\n\nfunction Slot(props) {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, idx: props.idx },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  const CardWrapper = styled.div`\n    margin: 0 auto;\n    width: 90%;\n    padding: 0 5%;\n    height: 250px;\n    background-color: rgba(240, 240, 240, 0.5);\n    /* border: 1px solid grey; */\n    box-sizing: content-box;\n    h3 {\n      font-size: 16px;\n    }\n  `;\n\n  return (\n    <CardWrapper\n      ref={drag}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        fontSize: isDragging ? 25 : \"initial\",\n        fontWeight: \"bold\",\n        cursor: \"move\"\n      }}\n    ></CardWrapper>\n  );\n}\n\nexport default Slot;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ItemTypes } from \"../utils/dragItems\";\nimport { useDrop } from \"react-dnd\";\n\nconst BoardSectionWrapper = styled.div`\n  width: 100%;\n  height: 250px;\n  background-color: paleturquoise;\n`;\nfunction BoardSection(props) {\n  const [{ isOver, isDragging, canDrop, item }, cardDropArea] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item, algo) => {\n      // item.char.attack(props.char);\n      props.children.props.empty ? props.move(item.idx, props.idx) : props.attack(item.idx, props.idx);\n    },\n    collect: mon => ({\n      isOver: !!mon.isOver(),\n      canDrop: !!mon.canDrop()\n    })\n  });\n\n  return (\n    <>\n      <BoardSectionWrapper style={{ backgroundColor: isOver ? \"yellow\" : \"initial\" }} ref={cardDropArea}>\n        {props.children}\n      </BoardSectionWrapper>\n    </>\n  );\n}\n\nexport default BoardSection;\n","import midoriya from \"../../assets/chars/midoriya.png\";\nimport leena from \"../../assets/chars/leena.png\";\nimport clash from \"../../assets/clash.wav\";\nclass Card {\n  constructor(id, name, img, power, maxLife, life) {\n    this.id = id;\n    this.name = name;\n    this.img = img;\n    this.power = power;\n    this.maxLife = maxLife;\n    this.life = life;\n    this._clashSound = new Audio(clash);\n  }\n\n  _playSound(sound) {\n    sound.time = 0;\n    sound.play();\n  }\n\n  attack(card) {\n    card.life -= this.power;\n    this._playSound(this._clashSound);\n  }\n\n  defend(power) {\n    this.life -= power;\n  }\n}\n\nexport class Midoriya extends Card {\n  constructor() {\n    super(\"001\", \"Midoriya Izuku\", midoriya, 10, 10, 10);\n  }\n}\n\nexport class Leena extends Card {\n  constructor() {\n    super(\"001\", \"Leena Inverse\", leena, 20, 15, 15);\n  }\n}\n\nexport const deck01 = [new Midoriya(), new Leena(), new Midoriya(), new Leena(), new Midoriya(), new Leena()];\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport cover from \"../assets/cover.png\";\n\nconst DeckWrapper = styled.div`\n  width: 100px;\n  height: 160px;\n  margin: 0 10px;\n  margin-top: calc(100vh - 160px);\n`;\n\nconst DeckImg = styled.div`\n  height: 100%;\n  width: 100%;\n  background-image: url(${cover});\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nfunction Deck({ drawCard }) {\n  return (\n    <DeckWrapper>\n      <DeckImg onClick={drawCard} />\n    </DeckWrapper>\n  );\n}\n\nexport default Deck;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport Slot from \"./Slot\";\nimport styled from \"styled-components\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport BoardSection from \"./BoardSection\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { deck01 } from \"../utils/cards/Cards\";\nimport background from \"../assets/wood-bg.jpg\";\nimport Deck from \"./Deck\";\n\nconst BoardWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: whitesmoke;\n  background-image: url(${background});\n  background-size: cover;\n  display: flex;\n`;\n\nfunction Board() {\n  const [ownPositions, setOwnPositions] = useState(Array(8).fill(null));\n  const [drawedCard, setDrawedCard] = useState(null);\n\n  const drawCard = () => {\n    const randNum = Math.floor(Math.random() * deck01.length);\n    const drawedCard = deck01[randNum];\n    removeCard(randNum, deck01);\n    setDrawedCard(drawedCard);\n  };\n\n  useEffect(() => {\n    const playCard = (drawedCard, idx = ownPositions.indexOf(null)) => {\n      if (idx === -1 || drawedCard == null) return;\n      const ownPositionsCopy = [...ownPositions];\n      ownPositionsCopy.splice(idx, 1, drawedCard);\n      setDrawedCard(null);\n      setOwnPositions(ownPositionsCopy);\n    };\n    playCard(drawedCard);\n  }, [drawedCard, ownPositions]);\n\n  const removeCard = (idx, arr) => {\n    arr.splice(idx, 1);\n    return arr;\n  };\n\n  const attack = (idx, newPos) => {\n    if (idx === newPos) return;\n    // else if()\n    const ownPositionsCopy = [...ownPositions];\n    ownPositionsCopy[idx].attack(ownPositionsCopy[newPos]);\n    const newownPositions = ownPositionsCopy.map(elm => (elm == null || elm.life <= 0 ? null : elm));\n    setOwnPositions(newownPositions);\n  };\n\n  const move = (idx, newPos) => {\n    if (idx === newPos) return;\n    const ownPositionsCopy = [...ownPositions];\n    ownPositionsCopy.splice(newPos, 1, ownPositionsCopy[idx]);\n    ownPositionsCopy.splice(idx, 1, null);\n\n    setOwnPositions(ownPositionsCopy);\n  };\n\n  return (\n    <DndProvider backend={Backend}>\n      <BoardWrapper>\n        <Row style={{ width: \"100%\" }} noGutters={false} className=\"justify-content-around\">\n          {ownPositions.map((elm, idx) => (\n            <Col md={3}>\n              <BoardSection move={move} attack={attack} char={elm} idx={idx} key={idx}>\n                {elm != null ? <Card char={elm} idx={idx}></Card> : <Slot empty idx={idx}></Slot>}\n              </BoardSection>\n            </Col>\n          ))}\n        </Row>\n        <Deck drawCard={drawCard} />\n      </BoardWrapper>\n    </DndProvider>\n  );\n}\n\nexport default Board;\n","import axios from \"axios\";\n\nexport class AuthService {\n  constructor() {\n    this.service = axios.create({ baseURL: \"https://ambarinos-card-game.herokuapp.com/auth\", withCredentials: true });\n  }\n\n  signUp = ({ user, password }) =>\n    this.service\n      .post(\"signup\", { username: user, password })\n      .then(res => res.data)\n      .catch(err => console.log({ err }));\n\n  login = ({ user, password }) =>\n    this.service\n      .post(\"login\", { username: user, password })\n      .then(res => res.data)\n      .catch(err => console.log({ err }));\n\n  getLoggedUser = () =>\n    this.service\n      .get(\"/loggedin\")\n      .then(res => res.data)\n      .catch(err => console.log({ err }));\n\n  logout = () =>\n    this.service\n      .post(\"/logout\")\n      .then(res => res.data)\n      .catch(err => console.log({ err }));\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthService } from \"../../utils/services/Auth.service\";\nconst authService = new AuthService();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\n\nexport default function Signup(props) {\n  const classes = useStyles();\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userError, setUserError] = useState(true);\n  const [passError, setPassError] = useState(true);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    console.log(e, name, value);\n    const regUser = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const regPass = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    switch (name) {\n      case \"user\":\n        if (regUser.test(value)) {\n          setUserError(false);\n          setUser(value);\n        } else {\n          setUserError(true);\n        }\n        break;\n      case \"password\":\n        if (regPass.test(value)) {\n          setPassError(false);\n          setPassword(value);\n        } else {\n          setPassError(true);\n        }\n        break;\n    }\n\n    if (!userError && !passError) setSubmitDisabled(false);\n    else setSubmitDisabled(true);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    authService.signUp({ user, password }).then(theUser => {\n      props.setUser(theUser);\n      console.log(theUser);\n      props.history.push(\"/\");\n    });\n  };\n  return (\n    <form className={classes.root} noValidate autoComplete=\"on\" onSubmit={onSubmit}>\n      <div>\n        <TextField\n          onChange={onChange}\n          error={userError}\n          id=\"filled-error\"\n          label=\"user\"\n          name=\"user\"\n          defaultValue=\"E-mail\"\n          helperText=\"Incorrect entry.\"\n          variant=\"filled\"\n          required\n        />\n        <TextField\n          onChange={onChange}\n          error={passError}\n          id=\"filled-error\"\n          label=\"password\"\n          name=\"password\"\n          defaultValue=\"Password\"\n          type=\"password\"\n          helperText=\"Incorrect entry.\"\n          variant=\"filled\"\n          required\n        />\n      </div>\n      <button disabled={submitDisabled}>Submit</button>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthService } from \"../../utils/services/Auth.service\";\nconst authService = new AuthService();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\n\nexport default function Login(props) {\n  const classes = useStyles();\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userError, setUserError] = useState(true);\n  const [passError, setPassError] = useState(true);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    console.log(e, name, value);\n    const regUser = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const regPass = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    switch (name) {\n      case \"user\":\n        if (regUser.test(value)) {\n          setUserError(false);\n          setUser(value);\n        } else {\n          setUserError(true);\n        }\n        break;\n      case \"password\":\n        if (regPass.test(value)) {\n          setPassError(false);\n          setPassword(value);\n        } else {\n          setPassError(true);\n        }\n        break;\n    }\n\n    if (!userError && !passError) setSubmitDisabled(false);\n    else setSubmitDisabled(true);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    authService.login({ user, password }).then(theUser => {\n      props.setUser(theUser);\n      console.log(theUser);\n      props.history.push(\"/\");\n    });\n  };\n  return (\n    <form className={classes.root} noValidate autoComplete=\"on\" onSubmit={onSubmit}>\n      <div>\n        <TextField\n          onChange={onChange}\n          error={userError}\n          id=\"filled-error\"\n          label=\"user\"\n          name=\"user\"\n          defaultValue=\"E-mail\"\n          helperText=\"Incorrect entry.\"\n          variant=\"filled\"\n          required\n        />\n        <TextField\n          onChange={onChange}\n          error={passError}\n          id=\"filled-error\"\n          label=\"password\"\n          name=\"password\"\n          defaultValue=\"Password\"\n          type=\"password\"\n          helperText=\"Incorrect entry.\"\n          variant=\"filled\"\n          required\n        />\n      </div>\n      <button disabled={submitDisabled}>Login</button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography>\n          {props.loggedInUser ? (\n            <Button color=\"inherit\">Welcome {props.loggedInUser.username}</Button>\n          ) : (\n            <>\n              <Button color=\"inherit\">\n                <Link to=\"/login\">Login</Link>\n              </Button>\n              <Button color=\"inherit\">\n                <Link to=\"/signup\">Signup</Link>\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthService } from \"./utils/services/Auth.service\";\nimport ButtonAppBar from \"./components/ui/NavBar\";\nconst authService = new AuthService();\n\nfunction App(props) {\n  const [loggedInUser, setLoggedInUser] = useState(false);\n  const fetchUser = () => authService.getLoggedUser();\n\n  useEffect(() => {\n    loggedInUser == false &&\n      fetchUser().then(user => {\n        user ? setLoggedInUser(user) : setLoggedInUser(null);\n      });\n  }, [loggedInUser]);\n\n  return (\n    <Switch>\n      <>\n        <ButtonAppBar loggedInUser={loggedInUser} {...props} />\n        <Route path=\"/signup\" render={() => <Signup {...props} setUser={fetchUser} />} />\n        <Route path=\"/login\" render={() => <Login {...props} setUser={fetchUser} />} />\n        {loggedInUser == false ? (\n          <h3>Trying to login</h3>\n        ) : loggedInUser == null ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Route exact path=\"/\" component={Board} />\n        )}\n      </>\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/midoriya.8331c8eb.png\";","module.exports = __webpack_public_path__ + \"static/media/leena.a98cce73.png\";","module.exports = __webpack_public_path__ + \"static/media/clash.7bc064b6.wav\";","module.exports = __webpack_public_path__ + \"static/media/wood-bg.23f4643b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cover.509edcbe.png\";"],"sourceRoot":""}